name: Daily Crypto Pipeline

on:
  workflow_dispatch: {}
  schedule:
    # draai 06:05 en 06:15 UTC (failsafe), evt. later aanpassen
    - cron: "5 6 * * *"
    - cron: "15 6 * * *"

permissions:
  contents: write   # nodig voor de optionele commit-stap

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ===== 1) Pipeline draaien: maakt CSV/JSON in data/reports =====
      - name: Run pipeline (maakt CSV's in data/reports)
        run: |
          python3 run.py --limit 50 --reports-dir data/reports
          echo "---- Listing data/reports ----"
          ls -lah data/reports || true

      # ===== 2) top5_latest.csv opbouwen uit scores_latest.csv =====
      - name: Build top5_latest.csv from scores_latest.csv
        run: |
          python3 - <<'PY'
          import csv
          rows = list(csv.reader(open('data/reports/scores_latest.csv', newline='')))
          top  = [rows[0]] + rows[1:6]
          with open('data/reports/top5_latest.csv','w', newline='') as f:
              csv.writer(f).writerows(top)
          print("Wrote data/reports/top5_latest.csv")
          PY

      # ===== 3) Marktrend + advies annotatie =====
      - name: Annotate top5 with market regime & advice
        run: |
          python3 scripts/annotate_market_regime.py data/reports/top5_latest.md

      # ===== 4) NIEUW: Diversify guard (allocatie-advies) =====
      # Schrijft achteraan in top5_latest.md een allocatie-regel,
      # bv. "Allocatie: SINGLE → HYPE 100%" of "Allocatie: DIVERSIFY → ETH 50% + HYPE 50%"
      - name: Advise allocation (diversify guard)
        run: |
          python3 scripts/advise_allocation.py \
            --gap 2.0 \
            --split 0.5 \
            --append-md

      # ===== 5) Upload rapporten als artifact =====
      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/latest.csv
            data/reports/latest.json
            data/reports/scores_latest.csv
            data/reports/scores_latest.json
            data/reports/top5_latest.md
            data/reports/top5_latest.csv

      # ===== 6) Optioneel: commit alleen top5_latest.csv naar branch 'reports' =====
      # Zet 'if:' op true als je dit wél wilt
      - name: Commit top5_latest.csv to 'reports' branch
        if: always() && false
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f data/reports/top5_latest.csv ]; then
            echo "top5_latest.csv ontbreekt; skip commit."
            exit 0
          fi

          TMP=/tmp/reports
          rm -rf "$TMP" && mkdir -p "$TMP"
          cp -f data/reports/top5_latest.csv "$TMP/top5_latest.csv"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # fetch/checkout met robuuste flow
          git fetch origin reports || true
          if git show-ref --verify --quiet refs/remotes/origin/reports; then
            git checkout -B reports origin/reports
          else
            git checkout -B reports
          fi

          mkdir -p data/reports
          mv -f "$TMP/top5_latest.csv" data/reports/top5_latest.csv
          git add data/reports/top5_latest.csv

          if git diff --cached --quiet; then
            echo "Geen wijzigingen; skip commit."
          else
            git commit -m "Update top5_latest.csv ($(date -u +%Y-%m-%dT%H:%M:%SZ))"
            git push origin reports
          fi

