name: Daily Crypto Pipeline

on:
  workflow_dispatch: {}
  schedule:
    - cron: "5 6 * * *"   # Dagelijks 06:05 UTC

permissions:
  contents: write   # nodig voor de optionele commit-stap

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline (maakt CSV's in data/reports)
        run: |
          python3 run.py --limit 50 --reports-dir data/reports
          echo "---- Listing data/reports ----"
          ls -lah data/reports || true

      - name: Build top5_latest.csv from scores_latest.csv
        run: |
          python3 - <<'PY'
          import csv
          rows=list(csv.reader(open('data/reports/scores_latest.csv', newline='')))
          top=[rows[0]]+rows[1:6]
          with open('data/reports/top5_latest.csv','w',newline='') as f:
              csv.writer(f).writerows(top)
          print("Wrote data/reports/top5_latest.csv")
          PY

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/latest.csv
            data/reports/latest.json
            data/reports/scores_latest.csv
            data/reports/scores_latest.json
            data/reports/top5_latest.md
            data/reports/top5_latest.csv

      # Optioneel: commit alleen top5_latest.csv naar branch 'reports'
      - name: Commit top5_latest.csv to 'reports' branch
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f data/reports/top5_latest.csv ]; then
            echo "top5_latest.csv ontbreekt; skip commit."
            exit 0
          fi
          mkdir -p /tmp/reports
          cp -f data/reports/top5_latest.csv /tmp/reports/top5_latest.csv
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin reports || true
          if git show-ref --verify --quiet refs/remotes/origin/reports; then
            git checkout -B reports origin/reports
          else
            git checkout -b reports
          fi
          mkdir -p data/reports
          mv -f /tmp/reports/top5_latest.csv data/reports/top5_latest.csv
          git config advice.addIgnoredFile false
          git add -f data/reports/top5_latest.csv
          if git diff --cached --quiet; then
            echo "No changes; skip commit."
          else
            git commit -m "Update top5_latest.csv ($(date -u +%Y-%m-%dT%H:%M:%SZ))"
            git push origin reports
          fi
