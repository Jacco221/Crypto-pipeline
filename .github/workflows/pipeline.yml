name: Daily Crypto Pipeline

on:
  schedule:
    - cron: "5 6 * * *"   # Dagelijks 06:05 UTC
  workflow_dispatch: {}

permissions:
  contents: write   # nodig voor de optionele commit-stap

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline (maakt CSV's in data/reports)
        run: |
          python3 run.py --limit 50 --reports-dir data/reports
          echo "---- Listing data/reports ----"
          ls -lah data/reports || true

      - name: Build top5_latest.csv from scores_latest.csv
        run: |
          python3 - <<'PY'
          import csv
          rows=list(csv.reader(open('data/reports/scores_latest.csv', newline='')))
          top=[rows[0]]+rows[1:6]
          with open('data/reports/top5_latest.csv','w',newline='') as f:
              csv.writer(f).writerows(top)
          print("Wrote data/reports/top5_latest.csv")
          PY

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/latest.csv
            data/reports/latest.json
            data/reports/scores_latest.csv
            data/reports/scores_latest.json
            data/reports/top5_latest.md
            data/reports/top5_latest.csv

      # Optioneel: commit alleen top5_latest.csv naar branch 'reports'
      - name: Commit top5_latest.csv to 'reports' branch
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f data/reports/top5_latest.csv ]; then
            echo "top5_latest.csv ontbreekt; skip commit."
            exit 0
          fi
          mkdir -p /tmp/reports
          cp -f data/reports/top5_latest.csv /tmp/reports/top5_la
git add .github/workflows/pipeline.yml
git commit -m "Align workflow to actual outputs + build top5_latest.csv"
git push origin main
nano .github/workflows/pipeline.yml
# 2) Check of de CSV's er zijncd ~/Crypto-pipeline

cat > .github/workflows/pipeline.yml <<'YAML'
name: Daily Crypto Pipeline

on:
  schedule:
    - cron: "5 6 * * *"   # Dagelijks 06:05 UTC
  workflow_dispatch: {}

permissions:
  contents: write   # nodig voor de optionele commit-stap

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline (maakt CSV's in data/reports)
        run: |
          python3 run.py --limit 50 --reports-dir data/reports
          echo "---- Listing data/reports ----"
          ls -lah data/reports || true

      - name: Build top5_latest.csv from scores_latest.csv
        run: |
          python3 - <<'PY'
          import csv
          rows=list(csv.reader(open('data/reports/scores_latest.csv', newline='')))
          top=[rows[0]]+rows[1:6]
          with open('data/reports/top5_latest.csv','w',n_
python3 --version
